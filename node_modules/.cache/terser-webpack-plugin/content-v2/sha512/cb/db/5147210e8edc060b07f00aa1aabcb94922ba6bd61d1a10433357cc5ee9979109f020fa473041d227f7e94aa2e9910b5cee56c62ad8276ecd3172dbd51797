{"code":"!function(e){var t={};function o(n){if(t[n])return t[n].exports;var c=t[n]={i:n,l:!1,exports:{}};return e[n].call(c.exports,c,c.exports,o),c.l=!0,c.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var c in e)o.d(n,c,function(t){return e[t]}.bind(null,c));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=0)}([function(e,t){const o=document.getElementById(\"startButton\"),n=document.getElementById(\"callButton\"),c=document.getElementById(\"hangupButton\");n.disabled=!0,c.disabled=!0,o.addEventListener(\"click\",async function(){console.log(\"Requesting local stream\"),o.disabled=!0;try{const e=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0});console.log(\"Received local stream\"),a.srcObject=e,localStream=e,n.disabled=!1}catch(e){alert(`getUserMedia() error: ${e.name}`)}}),n.addEventListener(\"click\",async function(){n.disabled=!0,c.disabled=!1,console.log(\"Starting call\");const e=localStream.getVideoTracks(),t=localStream.getAudioTracks();e.length>0&&console.log(`Using video device: ${e[0].label}`);t.length>0&&console.log(`Using audio device: ${t[0].label}`);const o=getSelectedSdpSemantics();console.log(\"RTCPeerConnection configuration:\",o);let a=new RTCPeerConnection(o);console.log(\"Created local peer connection object pc1\"),a.addEventListener(\"icecandidate\",e=>p(a,e));let i=new RTCPeerConnection(o);console.log(\"Created remote peer connection object pc2\"),i.addEventListener(\"icecandidate\",e=>p(i,e)),a.addEventListener(\"iceconnectionstatechange\",e=>f(a,e)),i.addEventListener(\"iceconnectionstatechange\",e=>f(i,e)),i.addEventListener(\"track\",u),localStream.getTracks().forEach(e=>a.addTrack(e,localStream)),console.log(\"Added local stream to pc1\");try{console.log(\"pc1 createOffer start\");const e=await a.createOffer(offerOptions);await r(e)}catch(e){l(e)}}),c.addEventListener(\"click\",function(){console.log(\"Ending call\"),pc1.close(),pc2.close(),pc1=null,pc2=null,c.disabled=!0,n.disabled=!1});const a=document.getElementById(\"localVideo\"),i=document.getElementById(\"remoteVideo\");function l(e){console.log(`Failed to create session description: ${e.toString()}`)}async function r(e){console.log(`Offer from pc1\\n${e.sdp}`),console.log(\"pc1 setLocalDescription start\");try{await pc1.setLocalDescription(e),s(pc1)}catch(e){g()}console.log(\"pc2 setRemoteDescription start\");try{await pc2.setRemoteDescription(e),d(pc2)}catch(e){g()}console.log(\"pc2 createAnswer start\");try{const e=await pc2.createAnswer();await async function(e){console.log(`Answer from pc2:\\n${e.sdp}`),console.log(\"pc2 setLocalDescription start\");try{await pc2.setLocalDescription(e),s(pc2)}catch(e){g(e)}console.log(\"pc1 setRemoteDescription start\");try{await pc1.setRemoteDescription(e),d(pc1)}catch(e){g(e)}}(e)}catch(e){l(e)}}function s(e){console.log(`${getName(e)} setLocalDescription complete`)}function d(e){console.log(`${getName(e)} setRemoteDescription complete`)}function g(e){console.log(`Failed to set session description: ${e.toString()}`)}function u(e){i.srcObject!==e.streams[0]&&(i.srcObject=e.streams[0],console.log(\"pc2 received remote stream\"))}async function p(e,t){try{await getOtherPc(e).addIceCandidate(t.candidate),function(e){console.log(`${getName(e)} addIceCandidate success`)}(e)}catch(t){!function(e,t){console.log(`${getName(e)} failed to add ICE Candidate: ${t.toString()}`)}(e,t)}console.log(`${getName(e)} ICE candidate:\\n${t.candidate?t.candidate.candidate:\"(null)\"}`)}function f(e,t){e&&(console.log(`${getName(e)} ICE state: ${e.iceConnectionState}`),console.log(\"ICE state change event: \",t))}}]);","extractedComments":[]}